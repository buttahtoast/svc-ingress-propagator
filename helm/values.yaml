# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- instance identifier (Defaults to release name)
identifier: ""

ingressClass:
  # -- Create IngressClass 
  create: true
  # -- Ingress class name
  name: propagation
  # -- Ingress class controller
  controllerValue: ""
  # -- Cluster default ingress class
  isDefaultClass: false

# Target Configuration
target:
  # -- IngressClass on target
  ingressClass: "propagated"
  # -- Namespaced on target
  namespace: "ingress-central"
  # Target Issuer
  issuer:
    # -- Issuer name on target cluster
    name: ""
    # -- Whether the issuer is namespaced on target cluster
    namespaced: false
  # -- Target Kubeconfig Secret
  kubeconfig:
    secret:
      name: "loadbalancer-propagation"
      key: "kubeconfig.yaml"

replicaCount: 1

image:
  registry: ghcr.io
  repository: buttahtoast/svc-ingress-propagator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Configure the liveness probe using Deployment probe spec
livenessProbe:
  httpGet:
    path: /healthz
    port: 10080

# -- Configure the readiness probe using Deployment probe spec
readinessProbe:
  httpGet:
    path: /readyz
    port: 10080


service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
